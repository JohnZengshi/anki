#separator:tab
#html:true
请用HTML创建一个基本的iframe嵌入YouTube视频	"<pre><code class=""language-html"">&lt;iframe 
    width=""560"" 
    height=""315"" 
    src=""https://www.youtube.com/embed/dQw4w9WgXcQ"" 
    frameborder=""0"" 
    allowfullscreen&gt;
&lt;/iframe&gt;</code></pre>"
iframe有哪些主要优点？	"<pre><code class=""language-text"">1. **内容分离** - 嵌套不同来源页面
2. **跨域通信** - 实现不同域间数据交换
3. **安全隔离** - 沙盒运行，防止恶意攻击
4. **动态加载** - 无需刷新整页即可更新内容</code></pre>"
请用JavaScript实现iframe与父页面的跨域通信	"<pre><code class=""language-javascript"">// 父页面
window.addEventListener('message', (event) => {
    if (event.origin !== 'https://trusted-domain.com') return;
    console.log('收到消息:', event.data);
});

// 向iframe发送消息
iframe.contentWindow.postMessage(data, 'https://trusted-domain.com');

// iframe页面
window.addEventListener('message', (event) => {
    if (event.origin !== 'https://parent-domain.com') return;
    // 处理消息
});

// 向父页面发送消息
window.parent.postMessage(data, 'https://parent-domain.com');</code></pre>"
iframe有哪些主要缺点和限制？	"<pre><code class=""language-text"">1. **性能问题** - 增加页面加载时间和内存使用
2. **SEO不友好** - 搜索引擎难以索引iframe内容
3. **可访问性差** - 屏幕阅读器支持不佳
4. **兼容性问题** - 部分设备和浏览器支持有限</code></pre>"
请用Go语言实现一个安全的iframe内容过滤器	"<pre><code class=""language-go"">package main

import (
    ""fmt""
    ""net/http""
    ""net/url""
    ""strings""
)

type IframeSanitizer struct {
    AllowedDomains []string
}

func (s *IframeSanitizer) ValidateURL(rawURL string) bool {
    parsedURL, err := url.Parse(rawURL)
    if err != nil || parsedURL.Scheme != ""https"" {
        return false
    }
    
    for _, domain := range s.AllowedDomains {
        if strings.Contains(parsedURL.Host, domain) {
            return true
        }
    }
    return false
}

func main() {
    sanitizer := &IframeSanitizer{
        AllowedDomains: []string{""youtube.com"", ""vimeo.com""},
    }
    
    http.HandleFunc(""/iframe"", func(w http.ResponseWriter, r *http.Request) {
        url := r.URL.Query().Get(""url"")
        if !sanitizer.ValidateURL(url) {
            http.Error(w, ""不安全的URL"", http.StatusForbidden)
            return
        }
        // 返回安全的iframe
    })
    
    http.ListenAndServe("":8080"", nil)
}</code></pre>"
iframe的常见使用场景有哪些？	"<pre><code class=""language-text"">1. **嵌入外部内容** - YouTube视频、Google地图、社交媒体组件
2. **微前端架构** - 模块隔离、独立部署
3. **安全沙盒** - 隔离第三方内容、广告展示
4. **跨域集成** - 支付网关、单点登录</code></pre>"
请用JavaScript实现iframe的动态高度调整	"<pre><code class=""language-javascript"">// 父页面
class IframeResizer {
    constructor(iframe) {
        this.iframe = iframe;
        this.init();
    }
    
    init() {
        window.addEventListener('message', (event) => {
            if (event.data.type === 'resize') {
                this.iframe.style.height = event.data.height + 'px';
            }
        });
    }
}

// iframe页面
function reportHeight() {
    const height = Math.max(
        document.body.scrollHeight,
        document.documentElement.scrollHeight
    );
    
    window.parent.postMessage({
        type: 'resize',
        height: height
    }, '*');
}

// 监听内容变化
new MutationObserver(reportHeight).observe(document.body, {
    childList: true,
    subtree: true
});</code></pre>"