

期中答疑 | name(){}与name: function() {}，两种写法有什么区别吗？




你好，我是 winter。

随着专栏进度过半，我们专栏的评论区留言量也日渐上涨。除了大家的小作业和学习心得，我还看见很多同学们在学习过程中提出了不少问题。

这其实是一种很好的学习方式，通过问题，我们可以对这部分知识记得更为牢固。

所以，我鼓励你在阅读文章之外，多思考，多提问，把自己不懂的地方暴露出来，及时查缺补漏，这样可以更好地吸收知识。同时，你也可以通过回答别人的问题来检验自己对知识的掌握情况。

我们一起来看看，大家都提出什么问题。



* * *



1. 老师你好！我语义化标签用得很少，多数用到的是 header、footer、 nav 等语义化标签，想问老师 section 和 div 混合使用，会不会效果不好呢？

答：不会效果不好的，因为本来就是这么用的。遇到不确定的情况，请千万不要乱用标签，用 div 和 span 就好。

2. 我一直看见闭包这个词，但是一直也没有弄清楚它是什么东西，老师可以简单概括一下什么是闭包吗？

答：你可以这样理解，闭包其实就是函数，还是能访问外面变量的函数。

3.“事实上，JavaScript 中的“类”仅仅是运行时对象的一个私有属性，而 JavaScript 中是无法自定义类型的。”

文中说“类”是私有属性，可以具体表现是什么，不是很能理解具体含义？



答：私有属性当然是你无法访问的属性了，但是具体表现的话，还是有的，那就是 Object.prorotype.toString.call(x) 的行为。

无法自定义类型？请问如下编码是属于什么操作，应该怎么理解这个“类”？



function Person（）｛｝

var person = new Person（）；



答：这个代码是定义类的操作，这里注意一下，你千万不要把类和类型的概念混淆。

4. 请教老师在对象中name(){} 等同于name: function() {} ，这两个写法有什么区别呢？

答：这两个写法在使用上基本没什么区别。只有一点区别，就是函数的 name 属性不一样。可以看下这段代码：

var o = {

myfunc(){}

}

console.log(o.myfunc.name)



我们这里按照你的第一种方法定义了方法，然后输出它的 name 属性，我们看到 name 属性是"myfunc"。

值得一提的是，如果我们给你的第二种方法添加了名字，行为还是不一样，区别在于能否在函数内用名字递归，我们看看代码：

var o2 = {

myfunc(){

consoe.log(myfunc); //error

}

}

var o1 = {

myfunc: function myfunc(){

consoe.log(myfunc); //function myfunc

}

}

o1.myfunc();

o2.myfunc();



这段代码中，我们试着在用两种方式定义的方法中输出函数自身的名字变量，结果是不一样的。

不过现实中，我们几乎不会关心函数的 name 属性，所以不用太在意两种定义方式的区别。

5. 我对于 JavaScript 中 Number 安全整数有个疑问。

MDN 中是（-(2^53-1)~(2^53-1)）, 犀牛书中是（-2^53~2^53）感觉都有道理。

JavaScript 中采用 IEEE754 浮点数标准进行存储， 1 个符号位，11 位指数位， 52 位尾数位。

按照分析，不考虑符号位，尾数位取值 52 个 1 就是表示的最大值了，不会有精度损失，此时指数位代表数值是 52+1023=1075，此时即为 (-(2^53-1)~(2^53-1))。

但是 2^53 这个值，存储的时候尾数是 52 个 0， 指数位为 53+1023=1076，这个值也是刚好没有精度损失的，这时表示的就是（-2^53~2^53）。

用 Math.isSafeInteger() 判断安全数范围和 MDN 中描述一样。所以被问到这个的时候， 感觉两个都是有道理的吧！老师你说对吗？

答：你分析得非常好，我觉得我都没啥可补充的了。这个地方 JavaScript 标准写得也非常模糊，我简单瞄了一下，似乎是用实验的方式来给出的安全数范围。考虑到犀牛书的时效性肯定不如 MDN，应该是参考了某一版本旧引擎给出来的数据。

所以，这类行为我们还是以实测为准吧，我们不必纠结。

6. 老师您好，下面这个自己练习的例子希望您能帮解答：

console.log('sync1');



setTimeout(function () {

console.log('setTimeout1')

}, 0);



var promise = new Promise(function (resolve, reject) {

setTimeout(function () {

console.log('setTimeoutPromise')

}, 0);

console.log('promise');

resolve();

});





promise.then(() => {

console.log('pro_then');

setTimeout(() => {

console.log('pro_timeout');

}, 0)

})



setTimeout(function () {

console.log('last_setTimeout')

}, 0);

console.log('sync2');



答：这个例子挺经典的，虽然我觉得这样设计面试题非常不合适，但是我们可以以它为例，学习一下分析异步的方法。

首先我们看第一遍同步执行，这是第一个宏任务。

第一个宏任务中，调用了三次 setTimeout（Promise 中的代码也是同步执行的），调用了一次 resolve，打印了三次。

所以它产生了三个宏任务，一个微任务，两次打印。

那么，首先显示的就是 sync1、promise 和 sync2。这时，setTimeout1，setTimeoutPromise，last_setTimeout 在宏任务队列中，pro_then 在微任务队列中。

接下来，因为微任务队列没空，第一个宏任务没有结束，继续执行微任务队列，所以 pro_then，被显示出来，然后又调用了一次 setTimeout，所以 pro_timeout 进入宏任务队列，成为第 5 个宏任务。

然后，没有微任务了，执行第二个宏任务，所以接下来顺次执行宏任务，显示 setTimeout1，setTimeoutPromise，last_setTimeout，pro_timeout。

最终显示顺序是这样的。

宏任务 1 微任务 1 sync 1

promise

sync 2





微任务 2 pro_then





宏任务 2 setTimeout1





宏任务 3 setTimeoutPromise





宏任务 4 last_setTimeout





宏任务 5 pro_timeout





7. 为什么 promise.then 中的 settimeout 是最后打印的？不用管是宏任务依次执行吗？

答：因为 then 是第一个宏任务中最后执行的微任务，所以它发起的宏任务是最后入队的，依次执行就是最后。

8. 怎么确定这个微任务属于一个宏任务呢，JavaScript 主线程跑下来，遇到 setTImeout 会放到异步队列宏任务中，那下面的遇到的 promise 怎么判断出它是属于这个宏任务呢？

答：resolve 在哪个宏任务中调用，对应的 then 里的微任务就属于哪个宏任务。宏任务没有从异步队列中取出，中间所碰到的所有微任务都属于这个宏任务。

9. 为什么要设计微任务（micro task），我知道这样 JavaScript 引擎可以自主地执行任务，但这样的好处是什么？提高性能吗？

答：不是，微任务是 JavaScript 引擎内部的一种机制，如果不设计微任务，那么 JavaScript 引擎中就完全没有异步了呀，所以必须要设计微任务。

10. 现在浏览器多数实现是从右往左匹配的，那么无法保证选择器在 DOM 树构建到当前节点时，已经可以准确判断当前节点是否被选中。现在浏览器又是怎么实现在生成 DOM 树，同时进行 CSS 属性计算？

答：其实现代浏览器已经为:empty、:last等伪元素写了很多例外了，不过你说的从右往左匹配，左边的要么是当前节点的父元素，要么是前置元素，所以是可以保证准确判断的呀。

11. 请问老师，页面资源的预加载是不是可以用 link 标签实现，还有其他的方式吗？

答：预加载的方法就多啦，还可以用 JavaScript 代码预加载，甚至用本地存储缓存。

12. 老师，我有一个疑问：“词法环境”和“词法作用域”这两个概念的区别是什么？希望你能帮我解惑。

答：词法环境是运行时概念，词法作用域是语言概念，就是说，作用域指的是变量生效的那段代码，而词法环境是指运行起来之后，你这段代码访问的存储变量的内存块。

13. 想问一个问题：import 进来的引用为什么可以获取到最新的值，是类似于 getter 的机制吗?

答：这个地方略微有些复杂，我们在运行时并没有讲 import 的运行时机制，这里涉及了一个叫做 ImportEntry Record 的机制，它比 getter 的实现更底层。

我想这个地方我们没有必要去深究模块的运行时机制，它很复杂而且并不是经常要用到。你如果想了解的话，可以查阅一下。

14. 请问老师，JavaScript 的 call stack size 是多少，这个 size 的单位是啥，是调用栈中函数的个数，还是一个存储单位，比如 MB 之类的。如果调用栈中就一个函数，这个函数的参数有 100 万个，浏览器端依然会溢出，看起来是存储单位，但是没得到验证。

答：这个似乎并没有什么特别规定，我知道 JSC 里面这个东西是可以用 C++ 代码来调整的，至于浏览器调用 JavaScript 引擎的时候会怎么做，还真不好说。

不过，从编码风格上建议，不要把这种事情用函数解决啦，真要干这样的事，数组可能都不合适了，请老老实实写 ArrayBuffer 吧。

15. 老师您好，我一直有一个困惑，浏览器的鼠标事件是怎么识别到的，是碰撞检测的吗？

答：这个问题很不错，我后面在浏览器 API 的事件部分会详细讲，可以先简单说一下，这里的检测方式是从外到内，逐级分配给子元素，所以我们的事件会有捕获过程。

16. 有个问题，如果我 javaScript 代码改变了 DOM 树元素的位置，需要启动重新排版（位置改变的元素只会影响其他部分元素的位置，甚至不影响其他元素的位置。），这时会导致这棵 DOM 树的所有元素都需要重新排版、绘制和渲染吗？

答：排版应该是会重新排的，但是如果有些元素的尺寸没有改变，那么它内部不需要重排，当然也就更不需要重新渲染了，但是绘制应该是要重绘的，目前来看，浏览器还没有那么智能。

17. 老师，我是 12 年左右踏进半只脚到前端领域的，后来考研就放弃了，觉得前端不够高深，和传统工程师来说觉得门槛低很多，甚至前期我都觉得自己不是个程序员。

直到研究生毕业，才又选择前端，这是三大框架风靡，我却有点迷惘，感觉和自己认知的前端不一样，直到现在工作了差不多两年，才悟出了点道道。

作为工程师，我始终觉得前端也应该熟练算法和数据结构、数据库这些所谓的后端知识，但是平时工作场景中用到又少，不知如何学习？

答：算法和数据结构可不是什么后端知识呀，是所有程序员的基本技能。

算法主要是靠大量练习提高，数据结构可以一个一个学习，不要指望工作中用到恰巧就学了，毕竟学习要教学费而工作是领工资的，哪里会有这样的好事呢，所以还是自己多多练习呀。

18. 重学前端是夯实前端基础，那前端进阶方向在哪里? 还是一定要修一门后端语言扩展服务端，希望老师可以指点迷津。

答：我觉得任何编程相关岗位的进阶方式都是做出某某东西，而不是学会某某东西。我会在专栏课程的第四模块会讲到一些进阶可能的方向，你可以关注一下。

19. 我主业是后端，工作中也会带着做前端，自认还是能完美还原设计师的设计。但是现在感觉很多时候提前端就是 vue 等，而我还是在用 jQuery，想请老师说说看，我是不是落伍了？

答：落伍的问题不是你用什么框架，而是你在做什么东西，学什么东西。

框架不是赶时髦，追潮流，每个框架都有解决的问题，我觉得你该焦虑的不是你用的框架为什么这么老，而是你该知道这些新框架要解决什么问题，以及这些问题为什么在你的工作中不存在。

最后，我们来看看我在 JavaScript 类型那一篇中给你留的实践问题。

如果我们不用原生的 Number 和 parselnt，用 JavaScript 代码实践 String 到 Number，该怎么做呢？

答：其实这个问题我在后台没看到特别满意的答案，好像大家都很喜欢偷懒啊。

我这里给你留个例子，处理十进制整数。

function atoi(a){

let chars = a.split("").map(e => e.charCodeAt(0) - "0".charCodeAt(0));

let n = 0;

for(var char of chars) {

n *= 10;

	n += char;

}

return n;

}

atoi("1001")



我比较期待大家有人能写出来带小数，甚至带科学计数法的代码，你可以尝试一下。

好了，今天的答疑环节就进行到这里，你也可以把自己想要解答的问题留言。





期末答疑（一）：前端代码单元测试怎么做？




你好，我是 winter。

我们专栏课程的知识部分已经告一段落了。今天，我来集中解决一下大家在学习中遇到的问题，我争取用快问快答的形式，咱们多回答一些问题。

1. 前端代码单元测试还是非常有必要的，不知道老师这一块是怎么做的，能否分享一下？

答：关于单元测试这件事，虽然在业务代码我没做成功过，但是它在框架和基础库开发中起到了非常积极的作用。

我们平时写代码也肯定写一部分就要运行一下试试，其实这种行为就是单元测试，只是我们把很多自动化的内容，用人肉执行了，并且没有保存和管理 case，也没有统计 code coverage。

只要选择一个好的单元测试框架，单元测试成本其实不高，尤其是比较复杂的底层库，引入单元测试不但不会消耗时间，还会提高效率。

所以我认为单元测试要实行，有两个关键点你要格外注意：一是出一套好的单元测试方案，二是在基础库和框架开发中引入单元测试。

2. 关于 Undefined ，如果一个变量没有赋值后面又赋值，这个过程就是“变量会被篡改”的意思么？而 null 为什么又不会被篡改？一个变量开始定义为 null 然后赋值其他数据这个过程不算篡改吗？

答：undefined 是个全局变量，null 是个关键字，在一些版本比较旧的浏览器上，你可以试试：

undefined = 1;



但是你在任何版本的浏览器上，都不能这么干：

null = 1;



这样的话，上面这个代码就会报错了。

3. winter 老师你好，我们公司的前端是 Node.js 写的，如何做性能监控呢，如何做页面加载优化呢，我对您的页面性能打分系统很感兴趣，能详细讲一讲吗？谢谢了。

答：首先，Node.js 写的是服务端代码跟前端性能没有任何关系，Node.js 的性能监控比前端性能监控复杂得多，你可以了解下 alinode。

前端性能打分可能主要包含几个部分。

图片：检查图片数量和图片大小，比如单个超过 50k，总量超过 400k 的图片就要注意了，如果检查到小图片，也可以建议用 data uri 内联。

请求数：检查请求数，检查是否有独立的 JS、CSS 请求，这些都是潜在的优化点。

域名：检查域名是否有在 http dns 的范围内，检查域名数量是否过多，检查资源文件域名是否属于 CDN。

实际加载时间：如果测试环境加载时间过程，也可能说明一些问题。

缓存：检查静态资源是否设置了正确的缓存。



你可以自己动手试试。

4. 有一个疑惑是，大小写的两个属性有什么区别呢，比如：

Screen，screen

Event，event



答：这里面大写的是类，小写的是对象。

5. 我还是比较认同，从左往右匹配的规则，这样就像老师讲的可以在构建 DOM 树的同时来进行匹配 CSS 规则，相当于同时构建渲染树了，而不必等到 DOM 构建完毕再进行 CSS 的规则匹配。

进行构建渲染树，虽然从右向左匹配对于复杂的选择器更优，但是这里面浪费了等待 DOM 构建完毕，才能使用的 CSS 匹配规则。而且相对于同为 id 等单一选择器而言，明显从左向右更具有优势！这是我的一点想法，望老师指正！

答：其实我在之前的分享中做过一个试验，当时的 Chrome 确实是从右往左，如果 #id 在最左，速度会更快，但是那个过程是后添加 CSS 的情况。

6. 程老师你好。我在很多地方看到的说法是：CSS 会阻塞 DOM 渲染，但不会阻塞 DOM 的解析，且 CSS 文件的请求是异步请求。

那么如果按照您所说，DOM 的构建和 CSS 属性的计算是同步的话，head 中 CSS 文件的下载以及 CSSOM 的 rule 部分的构建，应该会阻塞 HTML 的解析和 DOM 的构建。好像这两种说法之间就有了冲突。麻烦程老师有空的时候可以帮忙解释一下，万分感谢。

答：其实你误解了我的意思，DOM 构建的结果到 CSS 属性计算是个流水线，所以 CSS 会阻塞 CSS 计算，不会阻塞 DOM 构建。

7. 老师，我记得有的书上或者是资料上说超过五次的 if else 就最好用 switch case 来替换。这样效率更好。您这里为什么说不用这个呢？

答：我在性能部分讲了，“凡是不做 profiling 的性能优化都是耍流氓”。

具体的话，你可以看一看“43 | 性能：前端的性能到底对业务数据有多大的影响”这一篇。

8. 函数调用和函数执行有什么区别？ 有没有相应的标准？

答：我们一般讲“A 函数调用了 B 函数”“浏览器执行了 B 函数”，所以你看，两者的区别是主语不同，你可以感受一下区别。它们对应的标准都是 ECMA262。

9. 请问下老师，为什么 flexible 布局方案不再维护了呢？这个方案本身存在问题吗？

答：不存在问题，但是 rem 计算是个历史方案，现在，我比较推荐大家使用 vw。

10. 有的工业软件，3D 建模的也可以用浏览器来实现了，用的是 ThreeJS WebGL，老师了解这些嘛？怎么看待这个发展前景。

答：挺好的，但是我觉得这件事由本来做 3D 的工程师转型更方便。

11. 最近出于好奇，我 clone 了 github 上 chrome 的源码仓库，发现竟然有 12G 多，貌似比 linux 内核的源码还多。个人特别想探索一下浏览器源码，但面对如此庞大的代码，不禁望而生畏，也不知从何下手。

请问老师，浏览器内核源码该如何去研究，skia 渲染引擎是最先进吗，svg，canvas，WebGL 该如何选择，怎样深入地学习和掌握它们呢？望老师拨冗答疑，谢谢！

答：你先编译通过吧，然后试着跑起来打断点这样子，其实这件事没有捷径，多花些时间就可以。

skia 引擎是不是最先进，这事我也不好说，其实在工程领域我们一般不追求“最先进”，我们只需要它“足够先进”。

关于如何选择，我收到了很多问题，不过我其实都不做回答，毕竟我没法替你决定你自己的职业发展道路，这个责任实在是有些重大了。

12. 看完老师列出的表格更迷茫了，比如，为什么 transform 属于 level 1，transform 不是 CSS3 里的属性么？level4 是什么？是 CSS4 么？为什么 color 这种常用属性属于 level4? 不应该属于 level1 么？好迷茫哦。

答：我先解释一下你的问题，一方面，level4 里有不等于 level3 里没有，另一个是，W3C 定 level 并不是十分严谨，有从 1 开始，也有从 3 开始的。

除此之外，我想提醒一下，这个表格并不是给你去看 level 的，而是告诉你标准在哪里，让你去读标准的。

13. 请问老师，我后台用的是 Tomcat 服务器，前端用 ajax 请求静态资源时会间隔会报 412，也就是一次成功进入后台，一次报 412，这该怎么解决呢？

答：理论上 412 意思是你浏览器的问题。从你提供的信息我没法给你解决方案，建议你可以搞一个最小复现环境去 Tomcat 社区问。

14. 老师好，有个疑问： WHATWG 和 W3C 标准以哪个为准，这两个标准有什么区别？是不是相互不认可的。

答：这个问题比较复杂，WHATWG 最初是几家不满 W3C，出走搞出来的，后来被招安了把 HTML5 带回了 W3C，不过两边出标准的思路还是不太一样，WHATWG 是 living standard，就是随时更新标准，没有版本的概念，我是个人会倾向于 WHATWG 版本，因为比较新，而且 Chrome 跟得比较紧。

15. winter 老师好，可以给我讲一下那个 presentational attributes ，有些看不懂。

function showThis(){

console.log(this);

}



var o = {

showThis: showThis

}



showThis(); // global

o.showThis(); // o



我知道函数中的 this 是由调用函数的对象决定的，但这种理解总感觉是由结论推原因；老师能不能讲解下。

答：this 是由调用函数的对象决定，这完全是个规定，没有什么原因。（你后面的问题我节选掉了，我其实没太理解到你想表述的意思，你看到了可以再给我留言）。

16. 喜欢使用 let 和 const，看很多库里面，他们都喜欢使用 const，并且推荐使用 const，比如声明一个数组。

老师能讲解下声明一个数组用 let 和 const 有什么区别吗？在操作数组时，都是往数组中 push 值，原先的变量并物理地址并没有发生变化，如果用 let，和用 const 有什么区别，为什么 const 的性能会好一点？

答：性能好一些完全是乱说的，用 const 的话，可以避免你误把数组整个赋值掉，比较有安全感吧。

老师我有几个问题希望你回答：



老师讲到：“注意，我们这里讲的渲染过程，是不会把子元素绘制到渲染的位图上的，这样，当父子元素的相对位置发生变化时，可以保证渲染的结果能够最大程度被缓存，减少重新渲染。”

缓存的是什么东西，位图吗？如何减少重新渲染的？

是不是所有的元素都有对应的位图？



文中你举了两个例子，说如果只有一个位图，任何改变都会引起所有重新渲染。这个好理解，一个大位图就是一个单元，任何的改动相当于这个单元被变了，所以要重新创建这个，这样理解对吗？

但是你下面又说如果不合并，每次还是所有的重新渲染。感觉说的很矛盾啊。希望老师能回答一下我的疑问。

答：缓存的是位图，父子元素位置变化时，因为子元素的位图被缓存，子元素不需要重新渲染，因为父元素的位图也被缓存，父元素也不需要重新渲染，只有父子元素合成起来的位图需要被渲染。

你这样理解是对的，如果不合并，每次改点什么东西，都要重新逐级合成最终的大位图，也相当于重新渲染。

18. 老师，“当没有强制指定文字书写方向时，在左到右文字中插入右到左向文字，会形成一个双向文字盒，反之亦然。”这个能不能给个例子，不明白什么意思。

答：比如你在中文中插入几个阿拉伯语字符，阿拉伯语字符就会形成一个双向文字盒。

19. 看了您的流式数据的解释，是不是可以理解当看到页面渲染的时候，DOM 是不是有可能都还没构建完成呢？即使是理论上，有这种可能吗？

答：渲染不但发生在 DOM 构建之前，甚至可能发生在你下载网页完成之前，比如你上个 XX 软件下载站，是不是下载链接还没见到，就看到广告了（你提到的网上的那段是别人写错了。我节选掉了）。

20. footer 也可以和 aside，nav，section 相关联 (header 不存在关联问题)，不存在关联问题是什么意思啊，不应该在 header 中使用吗？下面又说 header 中可以使用 nav，老师的“关联”是什么意思啊？

答：因为 footer 有自己的语义，footer 必须要指明是谁的 footer，这样 footer 中的作者、地址才有意义，所谓的关联就是这个意思了。

21. 子元素的事件委托给父元素时，添加事件监听的第三个参数直接设置为 true，在捕获过程就判断父元素上的事件目标会比冒泡好些嘛？

答：对，但是你需要在捕获阶段想办法知道事件具体发生在哪个子元素上。

22. 老师 如果我想更深入的了解移动端的兼容问题，有没有好的学习路线呢？

答：兼容问题不是学出来的，你想在山中苦修，自出洞来无敌手？手机早就更新好几代了。所以兼容问题必须靠实践，在一个需要兼容性的业务上，不断积累和更新兼容性知识。

23. 老师，我在理解 SICP 这本书的过程抽象和数据抽象的时候，代入到前端，比如生命周期、事件处理等更多是过程的抽象，能提出一些公用的过程，而数据抽象更多指的是组件内的数据定义、api 的设计、高阶组件等。

请问我这样理解对吗？或者说老师对过程抽象和数据抽象在前端中怎么理解的？如果理解得不对，有什么好的书或者文章帮助理解？

答：SICP 讲的是很实在的编程技巧，在前端中对应的是变量、循环、条件这些东西，SICP 是一本好书，你应该更认真地去阅读它。

24. 通过这个课程老师对于前端的划分为 JavaScript、HTML 和 CSS、浏览器、工程实践几个部分。

疑问 1：现在前端基本把 Node 也包括进来了，对于 Node 的知识应该怎么定位？

疑问 2：Node 属于后端的范畴了，是否应该去学习下 java 相关的后端体系？学习了后端的体系是否会反过来促进前端知识的学习呢。



winter 老师对这两个问题怎么看呢？谢谢。

答：Node 属于后端，electron 属于客户端，不论你学哪个体系，肯定对前端都有促进作用。

但是，你不能认为懂了 Node 就懂了后端，懂了 electron 就懂了客户端，每个领域都可以很深入，知识本来就是学不完的，你能掌握多少只跟投入的时间有关，这道理是很简单的，与其困惑，不如把困惑的时间拿来学习，相信你会有所收获的。

25. 老师，CSS 是如何依附在 DOM 树上的? 是通过前面讲得 Node 实例来实现的?

答：在 Node 实例上添加属性，我在“12 | 浏览器：一个浏览器是如何工作的（阶段三）”讲到了，你可以返回去看看。

26. 清楚为什么要使用语义化标签，是否有必要使用之前，很难让自己有动机去应用每个标签。另外标签新推出如何保持实时掌握最新的标签呢，如何解决浏览器兼容的问题？

答：对语义化标签，我是建议不必追求全部掌握，现有需求再找标签即可。

27. 老师您好，有个疑问想请教一下，为啥基于对象关联风格的面向对象并不是像模拟类的行为的面向对象那么流行呢？原型委托这种的不是应该更符合 JavaScript 语言本身的设计嘛？类似这种：

var father = {

a: 1,

fn(): {

return 123;

}

}

var child = Object.create(father);

child.fn(); // 123



答：大部分人在学校学的都是 C++ 和 Java，我就没见过教原型的，这是现实，没办法。

28. 老师，可否稍加解释一下执行上下文的分类? 网络上的文章说“ JavaScript 中可执行的代码可分为三种类型：全局代码、函数代码、eval 代码，对应三种执行上下文（全局执行上下文、函数执行上下文、eval 执行上下文）。

在 ECMAScript 2018 中没有找到这种说法的依据。我的意思是，我不太清楚这些文章的说法是否正确，是否不够全面。

答：这个说法倒不能说不正确，但是严重过时了。

现在 ECMAScript 2018 里面执行上下文非常复杂，你可以看看各种 Record，重学前端课程里面也没有讲全。

29. 老师，在 ES5 之前版本规范中，会提及 JavaScript 的可执行代码分为全局、函数、Eval。但是在 ES6 之后版本规范中，再也不提及可执行代码的概念了，这是为什么呢？

答：其实这里是重构了一下表达方式，新加入了模块什么的。

30. 试过好多次，找了很多方法 flex 兼容 IE9 以下，每次都失败，有什么好的解决办法吗？

答：如果真有 IE9 兼容需求，我想只能单独写一份 CSS 了。

31. 请问大佬，如何冻结对象，一般什么样的场景可以用到？

答：Object.freeze 函数可以冻结对象。一般都是写底层库，希望避免篡改。

32.

new Promise(function(resovle, reject) {

setTimeout(resovle, duration);

})

setTimeout(resovle, duration); 和 setTimeout(() => {resovle()}, duration);



两者到底有什么区别，想不明白，求教。

答：这个区别不大的，第二种写法一般都是为了给 resolve 传参数，不过如果你不想给 resolve 传特定参数，为什么还要多写一个函数呢。

33. 我听 JavaScript 像听天书，怎么办，是不是要从 0 重新学起呀？

答：理论上，我的课程是把 JavaScript 的内容重新组织了一下，如果平时就在用 JavaScript，我认为问题不大。如果这部分完全听不懂，可能说明确实基础薄弱，建议你从 0 学起。



* * *



好了，本期的答疑告一段落，如果你还有其他的问题，或者还是没有弄清楚，你可以继续给我留言，我会继续解答大家的问题，并一起讨论。





期末答疑（二）：前端架构中，每个逻辑页面如何可以做到独立发布呢？




你好，我是 winter。

上一期的答疑文章发布之后，同学们的热情很高，我在后台又收到了一批新的问题，今天我们继续来答疑。

1. 请问前端架构中，每个逻辑页面如何可以做到独立发布呢？

答：首先，我们要知道发布是什么意思，我们平时开发好一个网页，把它放到线上真实对用户服务的机器上，这个过程叫做发布。

正常来讲，前端工程师发布的原材料是 HTML，产出是一个线上的 URL 地址。

各个公司的发布系统差异非常的大，有的是前端发 HTML，有的是前端把代码给服务端同学，改成 JSP 之类的代码，再一起发布。

对于逻辑页面而言，我们需要发布的从 HTML 变成了 JavaScript，这个 JavaScript 代码的作用就是渲染一个页面的内容。同时我们线上还需要一个公共的 HTML 文件来运行这些 JavaScript。

最后这些 JavaScript 文件只要能够做到独立发布，我们就可以认为逻辑页面是独立发布了。

2. 对于一个后端开发者来说，前端最困难的东西永远是 CSS 布局而不是 JavaScript，我们对 CSS 有很大畏惧和恐慌在于：CSS 没有很好的调试工具能解决问题，即使 chrome dev 这样的顶级 debug 工具，有时候也很难解释诸如“为什么页面上的这个盒子在这个地方”这样的问题。感觉 CSS 完全不符合编程的思路，老师有没有办法缓解一下这个问题？

答：其实我在课程中已经解释过了，早期的 CSS 从思路上来说就很别扭， 任何人都会觉得别扭，现在有了 flex 布局，我认为这个问题基本可以算解决了。

3. 最近一直在研究前端性能优化和线上错误收集，收效甚微，老师可以讲解一下大厂是怎么处理的吗？

答：这一部分，首先你需要一个比较通用的日志服务，能接受前端用 HTTP 请求的方式打一些日志进去，一般公司都会有这样的系统，如果没有，就需要新建一个，这部分比较麻烦，需要一定的专业知识。

有了这个日志服务，剩下的就是在每个前端页面插入一个 JavaScript 代码，监听 Window.onerror 可以得到错误，取 window.performance 可以得到性能，拿到以后，打日志就行了。

至于后续怎么去展示，展示了以后又怎么去推动执行，这块就需要你自己根据公司实际情况去找到解决方案了。

4. 老师，想问一下用 float 排版的时候 margin 值在不同的浏览器中会显示不同，是什么原因导致的呢？

答：我是从 IE6 时代过来，我还真没听说过 margin 值有什么兼容问题，你可以拿具体的案例来，我们一起看一看。不过我建议早日切到 flex，我们不要在没价值的事情上浪费生命。

5. 把链接分为超链接类和外部资源类是您自己的理解么，还是官方有这种分类呀，我没找到。老师可以说一下么？

答：不是，链接这个概念来自 HTML 标准（4.6.1 位置）。

https://html.spec.whatwg.org/



我在 HTML 的部分都在讲这个问题，你可以关注一下。

6. 老师，关于线上监控的数据采集和数据显示您有好的插件或者方案推荐？

这个其实没有现成的，这个东西，如果公司从数据安全的角度考虑，一般都不让用第三方的。

7. 老师提到原生构造器无法继承。而阮一峰老师表示，es6 已经可以继承原生构造函数，并且能定义子类。以我的理解来看，阮一峰老师的说法没有问题。不知道老师怎么看？

答：我查了一下，你说的没错，还真是这样，这块我理解错了，我后面会迭代一下。

8. 活动页面样式风格多变，并且有些活动页面是存在交互和购买流程等交互，这些交互怎么做成模板化？

答：这个答案很简单，只要能传参数，就能做成模板化。

9. DOM 树就是一种嵌套的数据结构吗？然后是渲染引擎将这个数据结构处理成我们看到的网页吗 ？

答：DOM 树是嵌套的树形结构，渲染过程是把它变成位图，绘制过程是把它画到显示器上。关于这部分内容，你可以回顾一下浏览器原理部分的几节课。

10. 浏览器中大多数的对象都原型继承自 Object，是否可以根据原型继承关系将 Window 上面的 api 绘制成一颗树？有了这些继承关系是否更容易理清这些全局属性呢？

答：API 不止有类，也有很多函数呀。所有的函数 API 的原型都是 Function.prototype，这不就没意义了么。

11. “宿主对象（host Objects）：由 JavaScript 宿主环境提供的对象，它们的行为完全由宿主环境决定。”

但是下面对宿主对象的解释又是：“实际上，这个全局对象 windows 上的属性，一部分来自 JavaScript 语言，一部分来自浏览器环境”。这并不像上面说的完全由宿主环境决定，这个怎么理解呢？

答：请注意看了，我这里讲宿主对象有个“们”字。

所以，这里可不是对宿主对象的解释，这是对 Window 对象的解释。Window 对象比较复杂，这块我没有详细讲，从 JavaScript 的 Global Object 的角度可以讲，浏览器部分还有个 Window Proxy 机制，我是觉得复杂又没什么实际意义就没有讲，你可以这样感性地理解一下：全局对象和 Window 对象合成了一个东西。

12. winter 老师，我看到淘宝用了 iframe 标签，能给我讲一下这个标签的使用场景和注意点吗？

答：我可以简单告诉你一个口诀：手机上不要用，PC 上除了历史包袱不要用。

13. 请问下，link preload 解析执行时机和构建 CSSOM 一样吗，HTML 从上往下解析到 link preload 才会解析执行？还是说并行解析 HTML 和 preload？

答：从标准来看应该是可以并行，但是具体怎样这块需要看浏览器源代码确定。

14. 老师，在 ES5 之前版本规范中，会提及 JavaScript 的可执行代码分为全局、函数、Eval。但是在 ES6 之后版本规范中，再也不提及可执行代码的概念了，这是为什么呢？

答：它们还在，只是现在执行过程更复杂了，没法这么简单分类了。

15. winter 老师，你提倡多继承吗？还是说尽量用聚合来解决问题？我看着 ES6 里面要实现多继承的方式也挺别扭的。

答：我不提倡多继承，Java 也不支持多继承啊。如果你想抽象可以用接口来代替，想复用可以用 Mixin 来代替。

16. 我这里还有个问题，使用 figureCaption 标签后，img 标签的 alt 属性可以缺失么？我一直觉得 alt 与 src 情同手足，什么都不应该把彼此拆散的。

答：不可以缺失，这是两个意思，figureCaption 可能是“图 1”这种东西，可不一定在描述图片内容。

17. 老师，style 既然也可以这么用<style>css 规则</style>，为什么没有 <style src=“”></style>？

答：你这个设计得不错，但是估计有了 link 以后，HTML 懒得把 style 改成 replacement 了吧。

18. 老师好，想请问下，业务场景中需要嵌入公司其他行业线的页面，这种不使用 iframe 该怎么办？

答：理论上应该让他们给你做个组件出来，但是如果实在没别的办法，就使用 iframe 吧。

19. 老师，目前有办法通过脚本反射的方式获取所有 JavaScript 原生对象吗？还是只能查文档？通过 for. in 遍历全局对象是不可以的，因为这些 JavaScript 原生对象虽然挂到了全局，但是属于不可枚举成员。

答：我们现在可以用 Object.getOwnPropertyNames，但是你 symbol 还是拿不到。

20. 老师，jquery ajax 同步请求的原理是? 目前用 axios 库，不支持同步请求，如果希望执行同步请求有什么解决办法？

答：原理是 XMLHttpRequest 这个可以传第三个参数，但是我不建议你用同步请求，会把 JS 执行线程卡住。

21. 老师您好，把 JavaScript 代码缓存在 localStorage 中，从 localStorage 取出后怎么执行？ 如果缓存的是 CSS 呢？

答：执行 JavaScript 用 eval，执行 CSS 用 document.createElement(“style”)。

22. 请问：var,let 和 const 在 babel 中都会被编译为 var, 那怎么区分 const 是常量呢？

答：如果你用 babel 的话，就不要管编译后的代码。

23. DOM 树构建与 CSSOM 构建有先后关系吗？CSS 计算与 DOM 树流式构建同步进行是不是意味着 DOM 树流式构建之前，CSSOM 已经构建完成呢？

答：我这里说的确实有点歧义，我在这里再厘清一下。CSSOM 是有 rule 部分和 view 部分的，rule 部分是在 DOM 开始之前就构件完成的，而 view 部分是跟着 DOM 同步构建的。

24. 老师能解释下这个么？

var b = 10;

(function b(){

b = 20;

console.log(b); // [Function: b]

})();



答：这个地方比较特殊，“具有名称的函数表达式”会在外层词法环境和它自己执行产生的词法环境之间，产生一个词法环境，再把自己的名称和值当作变量塞进去。

所以你这里的 b = 20 并没有改变外面的 b，而是试图改变一个只读的变量 b。这块儿的知识有点偏，你仅做理解掌握就好。

25. 关于状态机这一块，我觉得是不是可以先讲一节正则的知识点呢。理解了正则，那么大家对状态机的概念就有了更加直观的理解了。

答：一般正则都是状态机实现的，讲正则对理解它底层的状态机并没有多少意义。

当然了，词法分析也可以用正则来实现，我这里没有这么做而已，我写过一个 JavaScript 的词法分析是用正则做的，你可以参考这里:

https://github.com/wintercn/JSinJS/blob/master/source/LexicalParser.js





* * *



好了，今天的答疑就到这里，如果你还有问题，可以继续给我留言。我们一起讨论。





用户故事 | 那些你与“重学前端”的不解之缘





写在前面的话


不知不觉，专栏已经更新了一半有余了。在两个月的时间里，我收到了很多同学的留言，很开心可以跟大家保持交流，也很惊喜见证了大家的成长。

在整个学习过程中，你有没有一些学习感悟呢，有哪些新的学习收获，又有哪些实践感悟？有没有对前端的知识架构有了更为深刻的认识，是否规划好了自己的前端之路

如果你有想分享的经验，可以在文章下留言，如果你的留言被选中作为用户故事，我们将会为你送出“极客时间”& winter 联名 T 恤一件。分享你的收获，我们一起成长。



下面我们就一起来看看三位同学的分享。





极客时间用户 @阿成 分享


在我进入知乎社区的时候，winter 老师就已经不在这个社区了，虽然是退隐了江湖，但是江湖上还流传着他的传说，后来我在 Google Feed 中看到 winter 老师的开篇词，看完就感觉是我要的东西，还正好赶上打折，就毫不犹豫地买了。

我本科学的是光电信息，所以并不算是科班出身的程序员（虽然也有学 C 啦）。我本身对计算机程序一直很有兴趣，所以从大三开始，我就决定放弃从事本专业，做一名程序员。要说为什么选择前端领域，自然也是烂俗的“门槛低”理由。

不过，我没想到的是，前端的学习曲线到后面是如此陡峭，并且前端发展的速度如此之快，让人目不暇接，也让很多人产生了“技术焦虑”。

在这样的环境中，我也产生了迷茫，作为一名前端开发人员，我到底应该学什么，怎么学。毕业后两年多的时间里，我从使用原生的 HTML/CSS/JavaScript，到现在流行的视图库 Vue/React，看似我好像学会了很多，但是离开这些库，或者说将来这些库被淘汰了，我又剩下了什么呢？

我逐渐意识到，我需要的可能是一些更“底层”的东西。

那么, 什么是“底层”的东西呢，这里可不是指计算机底层，而是指不会被淘汰的东西，永远有用的东西。我认为对于任何程序员来说，最重要的就是：迅速获取某项知识的能力以及动手解决问题的能力。

前者需要我们建立自己的知识体系，也就是 winter 老师在第一讲中提到的，我们需要完善的知识架构。

我们不需要也不可能记住整个架构的知识，但我们却可以在需要的时候想起来这块知识的位置，是干什么的，能帮我们解决什么样的问题，可以通过什么关键词检索到，这就够了。

其实你让我回忆 winter 老师这么多节课的所有内容，我也是好多想不起来的，但多少都留下了印象。我们的大脑容量是有限的，所以“按需加载”也许对人脑也是个不错的策略。

后者其实就归功于 winter 老师精心设计的课后题，光看这些课文总归是差了点什么，只有你动手去做，才能真正理解这节课所讲的内容。

在做的过程中，你多半会遇到困难（这其实也是 winter 老师的本意），如果你通过努力解决掉了，这个提升才是最大的。你的方案不一定是最好的，或者你可能实在没什么头绪，这时候也可以利用搜索引擎去看看别人的方案。

因为我早上到公司要坐一个小时左右的公交，路上我基本上会用耳机听完课（不伤眼），然后剩下的时间去思考回顾一下，想想作业怎么完成。

在中午吃完饭休息的时候，动手做一下，有时候时间不一定够，就利用晚上和第二天的时间完成。每个人的情况都不一样，不过，想要有收获，就得付出多一些。

希望大家都能学有所成，有所收获。





极客时间用户 @峰峰峰 分享


先感谢极客时间给了我这次学习分享的机会，如果文中有不足之处，希望小伙伴们可以多多指导。

我是转行过来学习前端的，目前在前端这个岗位上工作了大概一年半的样子，最初知道重学前端这个专栏，也是因为朋友圈里面的一些大牛分享的，比较好奇，并且老师又是非常有名的 winter 老师，就报了这门课程。

我本人是对前端的技术非常感兴趣的，尤其是原生基础知识，因为我觉得一个人基础的扎实程度，能决定这个人在这个领域所能发展的高度。

刚开始看到课程目录的时候我很吃惊，因为这个目录和我之前所学的所有的课的目录都不一样，从文法、运行时的角度去解释 JavaScript 这门语言，这让我非常兴奋，因为我知道，这正是我所需要的。

通过跟随 winter 老师不断学习，我发现这把我原有的一些知识结构打乱了，但这并不是坏事，因为我以前的学习和知识结构都非常的混乱。

通过这次学习，让我对 JavaScript 的理解更加深入了一些，同时，重新梳理我的知识点也让我的知识结构更加的清晰了起来。

可能是我工作时间尚短的原因吧，我觉得老师的每一节课对于我来说都是一个新的东西。举个例子，就拿第 3 讲和第 4 讲来说吧，标签语义化我一直都知道，但是我在工作中用得很少，并且在理解上也只停留在非常浅的层面上，但是通过老师的讲解，让我理解到了语义化标签真正的含义。

我现在在工作都会开始使用一些我比较熟悉的语义化标签。包括一些浏览器的工作原理，关于 JavaScript 这门语言是面向对象还是面向类的解释，以及 JavaScript 的执行等等，这些知识点都让我受益良多，非常感谢 winter 老师，希望以后还能有机会跟着老师继续学习。

最后，分享一下我的学习方法吧。

先提升知识的广度，再去拓展知识的深度。

养成随时记录的习惯，可以是笔记，可以是代码（一定要写上注释）。

多逛逛技术论坛，有条件的情况下多去实验一下论坛中自己感兴趣的代码。

最后一条也是最重要的一条，坚持每天八小时工作外的学习和锻炼。



以上就是我的学习心得，不足之处还请多多见谅，希望对小伙伴们有帮助。





极客时间用户 @木易杨 分享


我看了老师在“极客 live”的直播，总结了他提到的一些观点。

对于框架的使用没必要花太多时间，应该多研究一下三大框架背后的设计思想。



当一个程序员对算法、语言标准、底层、原生、英文文档这些词汇产生恐惧感的时候，他的技术生命已经走到尽头。



前端架构主要解决的是高复用性，架构能力提升方向主要是组件库开发、前端框架实现等。



对于前端进阶这个问题，其实看书的作用和意义已经不太明显，需要寻找好的平台和合适的项目，在项目中不断克服难题并挑战自己，遇到问题再去查资料总结。如果只是闭门看书那很难成为高手，书只是基础而已，真正的应用还是在项目中。



寒冬中能做的只有提升自己，但是光靠技术是不行的。



推荐 TensorFlow、可视化切图、PWA、WebGL。

TensorFlow 可以了解使用并做点东西出来，原理很难但不影响使用。

PWA 有望进一步发展。

WebGL 在未来会是一个很好的方向，它可以实现任何你想要的界面效果，但重点需要多掌握图形学的基础知识，它和算法，数据结构一样重要。

Weex 和 RN 虽然都叫 Hybird 但不太一样，前者适合大厂主要是嵌入 APP 中使用，后者更适合创业公司。





不推荐 SSR、TypeScript、函数式编程。

SSR 不太看好，其主要是用于 SEO，不太建议用做服务端渲染，其能够使用的场景不多，而且成本代价太大。

TypeScript 是好东西，是很有前景的语言，但适用于十万行以上代码级别的大型项目，小项目并不适合，反而徒增复杂。

用 JavaScript 做函数式编程并不靠谱，Map/Reduce/Redux/Hooks 等并不是函数式编程，只是长得像而已。





PS：笔记内容由自己和群友提供，仅供参考。





我的一些思考和尝试


听完 winter 老师直播后对其观点很是赞同，但因为是面对所有人讲解，所以内容有点多范围有些广，但对个人来说还是找适合自己的方向，在自己相对熟悉的领域再去扩展去突破。横向只是拓宽你的眼界，纵向才是你的核心竞争力。

对我来说感触最大的就是 3、4、5 这几点，因为我一直在思考以下的几个问题。

我现在是高级前端，但又感觉自身很弱，那我如何才能夯实我高级的地基然后成为资深前端呢？

项目迭代节奏快日常加班又多，那我如何做才能平衡工作和学习？

单单提升技术好像还是有很大瓶颈，那我如何提升我的职场核心竞争力？



结合 winter 老师的专栏和最近看的几篇文章，说说我对这几个问题的思考。

对于第一个问题，在 2 个多月前我还是不会写文章的小白，那个时候受到一些文章的触动，尝试把我的前端之路记录下来。

我的想法很简单，就是把前端进阶 28 期的重难点知识全部讲完，目前已经进行到第 4 期了，通过写作把知识通俗易懂的介绍给别人，在这个过程自己肯定会收获很多很多。

这就是我目前在尝试的学习方式，通过写作建立自己的知识架构，并且在这个架构上不断地进行优化，时间到了自然就进阶了。

对于第二个问题，刚开始写作时精力充沛时间也很多，每天都会更新技术文章，但随着项目迭代压力增大，文章更新速度相应就变慢了一些。

虽然文章质量提升了很多，但更新速度从日更变成了周更再变成了双周更，这个说实话我自身已经很难接受了，因为速度变慢导致我年初的计划要打折扣。

所以说做项目和自我学习要如何权衡，是否说我要减少项目难度和时间并在工作中摸鱼去学习呢？

我的结论是不，因为一句话，“最好的学习就是在项目中锻炼自己”。既然我有这么好的项目去锻炼，那为什么还要摸鱼去学习呢，这不就是南辕北辙嘛，道理很简单但不是所有人都懂。

我最近在执行的方法是专注 + 锻炼 + 利用周末。

专注即工作时专注于工作，努力做好每次迭代，遇到难题迎难而上，工作时不开微信，勤用笔记安排日常工作并整理文档。

锻炼即一周抽出三天时间每次去健身房锻炼 1 小时，强壮的体魄才能撑住高强度的工作和学习，因为网易有健身房所以冬天锻炼也没什么问题，没办法去健身房的小伙伴可以尝试跑步或者在瑜伽垫上做 Keep。

利用周末即加大周末和平常晚上熬夜的时间去写文章，减少娱乐的时间，正所谓时间挤一挤总会有的，

但这件事情比较反人性，所以重在坚持。公众号写文章更容易坚持，原因在于文章发布后有正反馈，比如粉丝的增长，留言和鼓励，赞赏等等，这些都更能促使你坚持下去，时间长了自然就养成了习惯。

对于第三个问题，winter 老师也说了，寒冬中光靠技术是不行的，那应该靠什么呢？幸好在最近看到的一篇文章中找到了答案，那就是表达能力。

表达能力是形成自己的框架系统，有理有据并且逻辑清晰，而且能让外人听懂，大部分优秀的人都具备这样的能力。反观自己并没有这样的能力，所以我要努力提升这块，其中最重要的方法就是写作训练。

兜兜转转那么多，其实我一直在尝试的进阶方法就是通过写作建立自己的知识架构体系，同时提高自身的表达能力，通过正反馈机制和锻炼保证我长久的坚持下去并最终养成习惯，习惯这一模式之后变成优秀的人也只是时间问题罢了。

希望我的一些思考和尝试能对你有所帮助。

（直播回顾：https://v.qq.com/x/page/x0830fc8xoj.html）



* * *



恭喜幸运用户 @阿成、@峰峰峰、@木易杨，你们的经验被选取成为本期的用户故事。极客时间将送出“极客时间”& winter 联名 T 恤一件。1 个工作日之内，工作人员会与你取得联系。

读完了三位同学的故事后，你有哪些感受呢，留下你的收获，我们一起成长。





答疑加餐 | 学了这么多前端的“小众”知识，到底对我有什么帮助？




你好，我是 winter。这一期我想跟你谈谈前端知识的学习姿势。

课程进展至今，我已经把大部分困难的知识点都讲完了。我在后台收到了一些留言，有的同学针对前端专栏的学习方法和学习方向提出了一些问题，在本期文章中，为了让同学们更好地理解我们专栏的重点，最大程度地吸收知识，在今天的文章中，我会逐一回答同学们在学习方法上的困惑。





1. 老师讲的内容是不是工作中用不到的，对掌握前端的实际工作有什么帮助呢，我们有必要掌握这些比较偏的内容吗？


我自己一直奉行着一个观点，不要执着于知识的“临时”实用性。因为我总是感觉，掌握知识越多的人，更喜欢花费时间学习一些暂时可能无法变现的知识，原因有两点：一是其实学知识花费的时间比想象中的要少，这边在纠结它有没有用，那边可能都学完了；二是知识的实用性其实不怎么好判定，比如当年黎曼搞出非欧几何的时候，全世界都觉得纯粹是数学的思维游戏，直到黎曼死了很多年后，相对论出世，黎曼几何有了实际用途。

不过，这里我还是希望讲清楚，我想通过我们的课程传达一些什么样知识内容。

我们的每一节课标题中，都会带一个有点“小众”的问题，但是，实际上，这个标题主要是引起你学习兴趣的一个引子，解决问题只是我们学习课程的一个自然结果。

我希望的是，通过这个有点偏的问题，引起你对这部分知识领域的关注，知道这部分知识的边界在哪里，从而形成一个完备的知识网络。让你在遇见不会的问题时候，可以快速定位到知识点，达成有效学习。并且，你也可以通过自己之前没有关注过的不同视角，来重新学习一遍这部分的知识。

比如在 JavaScript 课程中，我提供了几个不同的视角来讲解 JavaScript 语言，每一个视角下，都是完整的 JavaScript 知识。

比如说，当我们写下 1+1 的时候，我们从词法的角度看，这是两个数字直接量和一个加法符号，我们从类型的角度看，两个 Number 类型相加得到的也是 Number 类型，我们从语法的角度看，这是一个加法表达式。

我们从不同的维度去认识了 JavaScript 语言，这些视角，远比你记住我们课上讲的细节更重要。如果你记住了“数字直接量可以用科学计数法，E 还可以小写”，却没有学会从词法的角度去分析 JavaScript 语言，那可谓是“入宝山空手而归了”。





2. 我从业时间不长，文章看得迷迷糊糊，是我的基础不够吗？该怎么办？


有一种说法，世界上的知识分成“我知道的”“我知道自己不知道的”和“我不知道自己不知道的”。

重学前端定位是有一定经验的前端工程师，所以它最重要的作用之一，就是帮助前端工程师发现问题，找出知识盲点。

课程设计上，我的主要思路也是“帮助”大家形成自己的体系，而不是“替”大家形成自己的体系。我在前言部分就讲到过，若论丰富全面，有 MDN 文档；若论准确权威，有标准文本，但是，我们课程的作用是传达思路，如果有知识上的缺失，你其实可以通过阅读 MDN 来补全。





3. 如果阅读文章时候有的内容看不懂，该如何学习，如何定位这块的知识呢？


这个问题比较抽象，我认为这个课程设计其实也是一种定位了。

比如，对 JavaScript 问题，先搞清楚看不懂的是词法问题、语法问题、还是运行时问题？定位清楚了问题，你已经距离解决问题前进了一大步。

在这里，我想跟大家说一下：如果你看不懂文章里的某一块知识，你可以给我留言，把具体的位置和知识点告诉我，这样我们可以进行更好的沟通和反馈，从而解决这个问题。如果你只是说不懂，我可能会一头雾水，也无从下手去帮助你解决问题。多做实时、有效的反馈，会让知识吸收的效果更好。





4. 为什么文章里有那么多的术语和英文呢，为什么不换成更通俗的名字呢？


其实，在我们的课程中，有很多次讨论到术语问题，比如“排版”，我们讲了中国古代的活字印刷，比如“渲染”，我们讲到了国画的技法。恰当地使用术语，对于传达知识是非常关键的。

翻译是一项很专业的工作，文学类的翻译讲究信、达、雅，对于技术类的名词，或许“雅”这方面可以稍微打点折扣，但是表意清晰，字句通达仍然是必须的。

很多术语有约定俗成的翻译，当我们阅读不同的文档时，可以快速地通过术语建立联系。并且，有的时候翻译本身也会造成一部分信息的丢失，所以，我有时会直接把英文也写出来，这样有助于你通过原文去理解和对照。

而为什么我不把术语换成更通俗的名字呢？

我们所讲的多数技术，跟现实生活联系不大，这种情况下，“通俗”的名字往往意味着误导。有时候，我们确定术语时，反而会尽量使它远离已有的概念。当然，确定术语并非是我的工作与专长，我们课程中的绝大多数术语，都不是我的发明创造。





5. 标准里有些东西还是看不太懂，如果可以的话，希望老师可以稍微讲解一下如何看懂标准？


我并不推荐每一个前端工程师都去阅读标准，标准一半是写给实现者，一半是写给使用者，这里本来就有很多知识上的落差，多数时候，MDN 是更好的选择。

如果一定要阅读标准，建议从自己做一个极简实现开始，我在浏览器部分，有讲解浏览器相关的知识，在 JavaScript 部分，我还设计了编译原理实验。我想，把它们落到代码上会是一个很好的开始。





6. 接手了一个新项目, 怎么对前端合理规划, 老师能不能提供一些这方面的指导和建议？


这个问题其实跟前端学习关系不大，但是我可以讲讲。

任何规划其实都差不多，得有背景、目标、方案、计划、预期结果。其实在我看来，“项目”是规划的最小单位，在项目中拆出前端来做规划，是不太合适的。

背景和目标通常来自公司的业务，方案跟具体的技术相关，计划是项目管理的领域，最后根据这些来给出预期结果。

再往下细说，一个完整的方案可能包括产品、运营、市场、技术，不同的项目，各个职能的难度不一样，有些项目可能干脆不需要某些方案——比如多数淘宝的产品，首页开个入口就有访问量了，不需要独立去做市场。

具体到技术方案，前端、后端和公司的基础设施都有一定影响，有些公司会找一个架构师来做整体方案，有些公司则是哥几个商量一下边做边出，其实因地制宜最重要，能达到目标的方案都是好方案。

有了整体方案，到前端的一亩三分地上，技术选型、工程规范是绕不开的，有些公司有统一的前端团队，框架和工具都定好了，那么项目里面，就剩下分工和代码设计问题了，也有些公司有些项目具有特殊性，需要特别定制。

实际上，我很难给出具体的“框架选 Vue”，工具用“webpack”这样的建议，因为工程领域本来就是需要很多妥协和权衡的。

不过，在我们课程的最后一部分，我选择了几个典型的基础设施和体系来讲，会给你分享这几个领域中我的认知。

在本篇文章中，我主要针对一些同学在学习上的疑问，给出了我的答案。你对前端的学习方法有什么样的困惑，欢迎给我留言，我们一起讨论。





尾声 | 长风破浪会有时，直挂云帆济沧海




你好，我是 winter（加微信：642945106 发送“赠送”领取赠送精品课程 发数字“2”获取众筹列表。）。

感觉特别长的几个月，忽然间就结束了。对我而言，这是一段奇妙的旅程，对你来说，我希望也是。

去年 9 月我离开原来的公司，打定主意要做一些程序员教育的事情，10 月份在 QCon，我遇到了“极客时间”的编辑，收到邀请来做一个专栏，于是就有了“重学前端”。

最初我答应“极客时间”的时候，其实心里想的是：反正我要做程序员教育，做一个专栏就当整理自己的知识也好。

但是从一开始的磨合和存稿阶段，我就发现这个事情没有我想的那么简单，与以前零散地写博客相比，按时按体系去产出课程需要花费成倍的时间和精力。不断查阅资料，整理代码，“重学前端”这个专栏对我自己来说，也是一个自我重塑的过程。

在这个专栏即将结束的时刻，我想借“重学前端”这个课程谈谈我对教育的理解。





教育是知识的展现形式


现在有一个特别火爆的概念叫做知识付费，其实我不太喜欢这个说法。

“重学前端”所讲的知识点，没有一条是我发明或原创的知识，这么说的原因是：知识就在那里，每个人都可以获得它。

你可以在各种文档和标准中找到它们或者它们的变体。有一些工程领域相关的知识，来自我工作中的实践，有一些也算是首创，但是我不认为这些知识属于我，我只是发现了它们。

所以我认为，知识是免费的，承载它们的教育产品才是收费的。

在整个课程写作中，我致力于在知识之间建立关系。我不希望把我的课程变成抄写文档。我从排版追溯到活字印刷，我从渲染追溯到中国画的技法，还有面向对象的起源。在这个过程中，我自己也颇有收获。我期望这样的一种组织形式能够帮助你更好地理解和记忆知识。

我有时候会觉得，这个把“知识变成课程”的过程，特别像前端工程师把数据变成可见的页面的过程，所以，从某种意义上讲，我做的事情还是前端。





教育的重点在于能力提升而不是知识积累


不过，我也不希望“重学前端”这个课程仅仅是“更容易记忆的知识”。因为在我看来，知识量并非衡量一个工程师优秀与否的因素，能力才是。

我的一点小小的奢望是：“重学前端”这个课程，能给你带来一些建立知识体系的能力。

我在“重学前端”的课程中，穿插了大量的“用代码读标准”的实验。这个小系列，算是我的一种“独门武功”。

我刚开始关注前端的 2007 年左右，国内还少有程序员知道 Web 标准这件事，想要找到资料就更难了，我也经历了最初看标准如同天书的过程。

但是我发现，其实标准中佶屈聱牙、晦涩难懂的那些概念，有着内在的联系，又因为标准文本中用词非常严谨，所以尝试用代码去理解，反而是个快捷的路径，还能找出不少边边角角的冷知识。

通过类似这样的线索，我建立了自己最初的知识体系，我开始对前端的体系的全貌有了粗浅的认知，现在，我希望通过“重学前端”课程，让你也来体会一下这个过程。





教育是一种服务，我们做得显然还不够好


作为老师，我希望这个课程能够真正帮助到你们每一个人，但是其实我们可以看到，每一节课都有一些放弃的同学。

可能有人会说，对平台方和老师来说并无所谓呀，反正付过钱了。但是在我和“极客时间”看来，这正是我们做得不够好的地方。今天“重学前端”这个课程，可能以这样的产品形态呈现出来，凭学员的自觉性来完成学习，实属一种无奈。

不论对我，还是对“极客时间”而言，培养更多优秀的工程师，潜在的价格远远高于卖一些课程得到收入。

我认为，教育是一种服务，理想的教育产品卖的应该是服务的结果，而不是服务的过程。

在未来，我会跟极客邦一起，探索一个全新的教育形态。我们很快会推出第一期线下的课程。如果你具备基本的前端技能，渴望通过自己的努力和我的指导，快速成长为一名高级前端工程师，欢迎你关注我在极客大学线下开设的前端训练营。

另外，虽然正稿已经结束，“重学前端”将来也不会变成一个“过去式”的专栏，我想把它变成一个“Ask me anything”的栏目，不论是后来购买的同学还是已经学完的同学，你们可以来这里的评论区与我交流，不限于课程内容，只要是技术和职业相关的问题，都可以来问我，我会回复或者更新答疑文章来为你解答。

专栏的课程到此告一段落，但是对我而言，这是一个起点。长风破浪会有时，直挂云帆济沧海，希望未来能与你一起遇见更好的自己。





