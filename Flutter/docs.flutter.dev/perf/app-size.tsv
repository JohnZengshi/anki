为什么调试构建的应用大小不具有代表性？	包含调试开销（热重载/源码调试功能），远大于生产版本。
Android上获取最准确大小的方法？	使用flutter build appbundle后在Android Vitals的App Size标签查看。
Android Vitals中下载大小的计算基准？	基于XXXHDPI（640dpi）设备和arm64-v8a架构。
iOS上获取大小报告的正确步骤？	1.flutter build ipa 2.在Xcode中Distribute App 3.选择设备变体并导出IPA。
iOS导出的关键文件是什么？	App Thinning Size Report.txt（包含不同设备的大小预估）。
iOS报告中"App + On Demand Resources size"代表？	下载大小（压缩后）。
iOS报告中"App size"代表？	安装大小（解压后）。
为什么IPA通常比APK大？	包含更多架构支持（详见Flutter FAQ）。
Flutter的大小分析工具从哪个版本开始？	1.22（配合DevTools 0.9.1+）。
如何生成大小分析报告？	构建命令添加--analyze-size标志（如flutter build apk --analyze-size）。
分析工具的两个关键输出？	1.终端摘要 2.*-code-size-analysis_*.json详细文件。
如何比较两次构建的大小差异？	在DevTools中加载两个JSON文件进行对比。
DevTools中深入分析的步骤？	1.dart devtools 2.选择Open app size tool 3.上传JSON文件。
减小代码体积的最有效方法？	添加--split-debug-info标志（分离调试信息）。
减少资源体积的三种方法？	1.删除未用资源 2.最小化库资源 3.压缩PNG/JPEG。
Android Vitals的特殊功能？	提供优化建议（在报告页面底部）。
iOS构建时的必要配置？	Strip Swift symbols（剥离Swift符号）。
iOS精确测量大小的终极方法？	上传IPA到App Store Connect获取官方报告。
大小分析工具在iOS的局限性？	生成.app而非IPA，仅用于相对大小评估。
终端摘要包含什么信息？	按类别（资源/原生代码/Flutter库等）的大小分解。
Dart代码的详细分析？	在DevTools中可查看文件级甚至函数级大小。