Impeller的主要目标是什么？	解决Flutter早期卡顿问题（early-onset jank）。
Impeller如何解决着色器编译卡顿？	在引擎构建时预编译着色器，避免运行时编译。
Impeller的五个核心目标？	1.可预测性能 2.可测量性 3.可移植性 4.利用现代图形API 5.利用并发。
Impeller如何处理着色器？	离线编译所有着色器和反射（build time）。
Impeller如何实现可测量性？	标记所有图形资源，支持动画捕捉到磁盘而不影响渲染。
Impeller的可移植性体现在？	不绑定特定渲染API，着色器可转换到后端特定格式。
Impeller支持哪些现代图形API？	Metal（苹果）和Vulkan（安卓）。
Impeller如何利用多线程？	单帧工作负载可分布到多个线程处理。
iOS上Impeller的默认状态？	默认启用。
如何在iOS调试时禁用Impeller？	运行命令：flutter run --no-enable-impeller。
如何在iOS部署时禁用Impeller？	在Info.plist添加：<key>FLTEnableImpeller</key><false/>。
macOS上Impeller的状态？	从Flutter 3.13起提供预览版（3.16仍为预览）。
如何在macOS调试时启用Impeller？	运行命令：flutter run --enable-impeller。
如何在macOS部署时启用Impeller？	在Info.plist添加：<key>FLTEnableImpeller</key><true/>。
Android上Impeller的启用条件？	需支持Vulkan的设备（Flutter 3.16+）。
如何检查Android设备支持Vulkan？	参考"checking for Vulkan support"文档。
如何在Android启用Impeller？	运行命令：flutter run --enable-impeller 或在AndroidManifest.xml添加meta-data。
AndroidManifest中的Impeller启用标签？	<meta-data android:name="io.flutter.embedding.android.EnableImpeller" android:value="true"/>。
Impeller问题报告规范？	GitHub提交问题，标题前缀[Impeller]，附带可复现测试用例。
问题报告需包含什么信息？	设备型号/芯片信息、问题截图/录屏。
Impeller架构设计参考？	查看GitHub源码中的README.md文件。
Impeller的技术创新点？	解决OpenGL ES 2.0缺乏统一缓冲区的问题。
Impeller的性能优势？	通过预编译和显式缓存实现可预测的渲染性能。
Impeller的资源标记功能？	所有纹理和缓冲区资源都带有标签便于调试。
Impeller的并发处理能力？	单帧渲染任务可跨线程并行执行。
Impeller的跨平台一致性？	在iOS/macOS/Android提供统一渲染解决方案。
Impeller的长期目标？	成为Flutter默认的高性能渲染运行时。