包的最小组成？	1.pubspec.yaml 2.lib目录（含<包名>.dart）。
插件包的核心特点？	包含平台原生实现（Android/iOS/Web等）。
联邦插件(federated)的组成？	1.应用面包 2.平台包 3.平台接口包。
应用面包(App-facing)的作用？	用户直接依赖的公共API入口。
平台包(Platform)的作用？	包含特定平台实现代码。
平台接口包(Interface)的价值？	统一各平台实现规范。
联邦插件的两种类型？	1.官方认可(endorsed) 2.非认可(non-endorsed)。
指定支持平台的配置？	pubspec.yaml中platforms映射（如android/ios/web）。
共享iOS/macOS代码配置？	sharedDarwinSource: true + darwin目录。
创建Dart包命令？	flutter create --template=package 包名。
创建插件包命令？	flutter create --template=plugin --platforms=平台列表 包名。
创建FFI插件包命令？	flutter create --template=plugin_ffi 包名。
Android代码编辑推荐？	Android Studio打开example/android/build.gradle。
iOS代码编辑推荐？	Xcode打开example/ios/Runner.xcworkspace。
Windows代码编辑推荐？	Visual Studio打开build/windows/包名_example.sln。
平台通信机制？	平台通道(platform channel)或FFI。
Dart纯平台实现配置？	使用dartPluginClass替代pluginClass。
混合平台实现配置？	同时使用dartPluginClass和pluginClass。
FFI绑定生成工具？	package:ffigen（基于头文件生成Dart绑定）。
长时原生调用建议？	在辅助隔离器执行避免卡顿。
文档必备文件？	1.README.md 2.CHANGELOG.md 3.LICENSE。
API文档生成命令？	flutter/bin/cache/dart-sdk/bin/dart doc。
LICENSE文件规范？	多许可证用80个连字符分隔，注明适用包名。
发布前检查？	flutter pub publish --dry-run。
正式发布命令？	flutter pub publish。
Flutter Favorites标准？	经过验证的高质量包（官方推荐首选）。
插件依赖声明位置？	Dart依赖在pubspec.yaml，原生依赖在平台构建文件。
Android原生依赖？	android/build.gradle中compileOnly指定。
iOS原生依赖？	.podspec文件中s.dependency指定。
Web依赖处理？	统一通过pubspec.yaml管理。