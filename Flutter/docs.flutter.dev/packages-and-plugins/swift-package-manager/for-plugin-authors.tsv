插件开发者启用SPM命令？	flutter config --enable-swift-package-manager。
当前兼容性要求？	必须同时支持SPM和CocoaPods（过渡期）。
Swift插件迁移步骤？	1.创建Package.swift 2.配置产品/目标 3.添加依赖。
Objective-C插件迁移？	需创建module.modulemap暴露头文件。
SPM迁移核心文件？	Package.swift（定义产品/依赖/最低版本）。
动态库类型限制？	避免type: .dynamic（违反Apple推荐）。
单元测试依赖迁移？	移除Podfile依赖，通过Xcode添加SPM测试包。
OCMock特殊处理？	需指定commit哈希（如fe1661a3efed11831a）。
测试目标依赖配置？	在Xcode中将包添加到RunnerTests目标。
动态库的额外步骤？	1.添加Link Binary With Libraries阶段 2.链接本地插件包。
测试依赖添加位置？	Xcode > Project > Package Dependencies > +。
Link Binary阶段创建？	Target > Build Phases > + > New Link Phase。
本地插件链接方法？	Add Local > 选择插件路径 > 添加到RunnerTests。
测试验证命令？	Xcode > Product > Test。
迁移风险提示？	测试中功能，发现问题提交issue。
版本控制建议？	在Package.swift指定平台要求（如.platforms(.iOS(.v13))）。
生态价值？	访问SwiftPackageIndex.com的丰富资源。
禁用SPM命令？	flutter config --no-enable-swift-package-manager。
过渡期策略？	保持双兼容直到SPM完全成熟。
模块映射文件作用？	让Objective-C代码在SPM中可见。
产品类型推荐？	使用.staticLibrary或.automatic（非.dynamic）。