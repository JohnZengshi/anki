创建浮动应用栏的核心目标是什么？	在用户向下滚动时隐藏应用栏以节省空间。
常规AppBar与浮动AppBar的主要区别？	常规AppBar固定在顶部，浮动AppBar随滚动隐藏。
实现浮动应用栏的核心组件是什么？	CustomScrollView + SliverAppBar组合。
CustomScrollView的主要功能？	允许混合不同类型的可滚动组件（slivers）。
SliverAppBar的关键属性是什么？	floating: true, expandedHeight, flexibleSpace。
floating属性的作用？	允许用户向上滚动时快速显示应用栏。
expandedHeight的作用？	设置应用栏展开时的最大高度。
flexibleSpace的应用场景？	放置可收缩的内容（如图片、复杂布局）。
实现滚动列表的sliver组件？	SliverList或SliverGrid。
SliverChildBuilderDelegate的作用？	懒加载列表项（类似ListView.builder）。
如何创建1000个列表项？	SliverChildBuilderDelegate(childCount: 1000)。
列表项的基础组件？	ListTile(title: Text('Item #$index'))。
浮动应用栏的典型高度设置？	expandedHeight: 200（大于常规高度）。
使用图片背景的技巧？	在flexibleSpace中放置Image组件。
Scaffold在浮动应用栏中的变化？	不再设置appBar属性。
CustomScrollView的slivers参数？	接受SliverAppBar和SliverList组成的列表。
调试技巧？	使用Placeholder()可视化收缩效果。
SliverGrid的应用场景？	需要网格布局而非列表布局时。
热重载在开发中的作用？	实时查看SliverAppBar属性变化效果。
SliverAppBar的收缩动画？	随滚动位置自动平滑收缩。