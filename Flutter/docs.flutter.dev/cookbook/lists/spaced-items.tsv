创建均匀间隔列表的核心挑战是什么？	在可滚动组件中实现均匀间距同时保持滚动能力。
为什么不能在可滚动组件中直接使用Spacer？	Spacer需要有限高度约束而滚动区域高度无限。
解决方案的核心组件组合是什么？	LayoutBuilder + SingleChildScrollView + ConstrainedBox。
LayoutBuilder的主要作用是什么？	获取父容器的布局约束信息。
ConstrainedBox的关键参数设置是什么？	minHeight: constraints.maxHeight。
为什么只设置minHeight而不设置maxHeight？	允许内容超出屏幕时保持滚动能力。
均匀分布列表项的最佳Column参数？	mainAxisAlignment: MainAxisAlignment.spaceBetween。
spaceBetween布局效果是什么？	首尾项贴边，中间项均匀分布。
替代spaceBetween的间距控制方案？	使用Spacer+IntrinsicHeight组合。
IntrinsicHeight的作用是什么？	强制Column计算自身固有高度。
Spacer在间隔列表中的使用限制？	必须包裹在IntrinsicHeight中使用。
如何动态生成间隔列表项？	List.generate(items, (index) => ItemWidget)。
示例中列表项的基础组件是什么？	Card > SizedBox > Center > Text。
为什么使用SizedBox包裹列表项？	固定列表项高度（示例中height:100）。
如何让列表项宽度填满容器？	crossAxisAlignment: CrossAxisAlignment.stretch。
调试响应式布局的技巧？	改变设备尺寸/窗口大小观察布局变化。
布局方案的核心优势？	空间充足时均匀分布，不足时自动启用滚动。
ListView.builder与本方案的主要区别？	本方案支持跨屏均匀分布而非线性列表。
ConstrainedBox约束条件的传递机制？	将父容器高度约束传递给子组件。
SingleChildScrollView在布局中的位置？	作为LayoutBuilder的直接子组件。