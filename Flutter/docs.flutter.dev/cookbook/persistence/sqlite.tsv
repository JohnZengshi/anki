
Flutter中SQLite持久化的首选包是什么？	sqflite。
sqflite支持哪些平台？	macOS、iOS和Android。
数据库相比本地文件存储的优势是什么？	提供更快的插入、更新和查询操作。
使用SQLite前需要添加哪些依赖？	sqflite和path包。
（sqflite）如何获取数据库存储路径？	使用getDatabasesPath() + join()函数。
打开数据库的核心方法是什么？	openDatabase()函数。
（sqflite）数据库初始化时的关键回调？	onCreate回调用于创建表。
创建表的标准SQL语法？	CREATE TABLE table_name(columns)。
设置主键的关键字是什么？	PRIMARY KEY。
SQLite支持的三种数据类型？	INTEGER, TEXT, REAL。
如何将Dart对象转换为Map？	实现toMap()方法。
插入数据的方法？	db.insert()。
（sqflite）处理重复插入的策略？	conflictAlgorithm: ConflictAlgorithm.replace（冲突算法，db.insert的第三个参数）。
查询所有数据的方法？	db.query('table_name')。
（sqflite）如何将查询结果转为对象列表？	List.generate(maps.length, (i) => Object(...))。
（sqflite）更新数据的方法？	db.update()。
更新操作的安全注意事项？	使用whereArgs防止SQL注入。
删除数据的方法？	db.delete()。
删除操作的安全实践？	使用whereArgs传递参数。
初始化数据库的关键步骤？	WidgetsFlutterBinding.ensureInitialized()。
（sqflite）表结构升级如何处理？	设置version参数实现升级/降级路径（openDatabase中的参数）。
数据库操作必须放在哪里？	async函数中（使用await）。
打印对象信息的技巧？	重写toString()方法。
如何确保跨平台路径正确？	使用path包的join()函数。
SQLite数据类型与Dart类型对应？	int→INTEGER, String→TEXT。
（sqflite）主键的作用？	提高查询和更新效率。
（sqflite）最佳实践：where子句参数传递？	使用whereArgs而非字符串插值。


# 补充
sqflite 中处理数据库升级的核心机制是什么？	通过版本控制机制实现：指定 version 参数并使用 onCreate/onUpgrade/onDowngrade 回调
当数据库需要添加新表时，应该在哪个回调中处理？	在 onCreate 回调中处理（首次创建）或在 onUpgrade 回调中处理（升级添加）
如何触发 sqflite 的升级流程？	增加 openDatabase() 中的 version 参数值
onUpgrade 回调的三个参数分别是什么？	Database db, int oldVersion, int newVersion
当用户跳过多个版本更新时，如何处理升级？	在 onUpgrade 中使用循环逐步执行每个中间版本的升级脚本
SQLite 是否支持直接删除列？如何实现删列？	不支持。需要：1)创建临时表 2)复制数据 3)删除旧表 4)重命名临时表
处理数据库降级时使用哪个回调？	onDowngrade 回调
开发环境中推荐的降级处理方式是什么？	使用 onDowngradeDelete 参数直接删除重建数据库
sqflite 中数据库版本号的数据类型是什么？	整数（int）
添加新列的正确 SQL 语句是什么？	ALTER TABLE 表名 ADD COLUMN 列名 数据类型
处理数据库升级时为什么需要逐步升级？	防止用户跳过多个版本更新时出现结构缺失问题
如何查看当前数据库版本？	执行 PRAGMA user_version 查询
onCreate 回调在什么情况下会被调用？	当数据库首次创建时（version > 0 且数据库不存在）
应该在哪里添加数据库升级后的数据迁移逻辑？	在升级脚本的最后部分添加数据迁移语句
为什么推荐每个版本变更只做原子修改？	方便维护和故障排查
复杂表结构变更的最佳实践是什么？	使用事务（db.transaction()）保证原子性
生产环境中处理降级的注意事项？	需谨慎处理，避免数据丢失，通常不建议降级
何时需要使用 onDowngrade 回调？	当应用回退到旧版本但数据库已是新版本时
修改列类型的正确做法是什么？	创建新表 → 迁移数据 → 删除旧表 → 重命名新表
如何测试数据库升级逻辑？	开发环境使用 onDowngradeDelete 快速重建数据库测试升级路径


为什么在SQL查询中避免使用字符串插值？	会导致SQL注入漏洞（如用户输入\'; DROP TABLE users;--会破坏数据库）
sqflite中安全传递WHERE参数的推荐方式是什么？	使用参数化查询：where子句中使用?占位符 + whereArgs列表传递实际值
如何实现安全查询age>25且名为Bob的用户？	db.query('users', where: 'age > ? AND name = ?', whereArgs: [25, 'Bob'])
使用whereArgs相比字符串插值有哪些优势？	三大优势：①防止SQL注入 ②自动处理类型转换 ③提高代码可读性和可维护性
占位符?可以用于哪些SQL组成部分？	仅用于值（数值/字符串），不能用于表名或列名（这些需要提前验证）
如何安全实现IN查询：WHERE id IN (?,?)？	1. 生成占位字符串：final placeholders = List.filled(ids.length, '?').join(',') \n 2. 查询：db.query('items', where: 'id IN ($placeholders)', whereArgs: ids)
处理NULL值查询的正确方法是什么？	使用IS NULL语法（不带参数）：where: 'last_name IS NULL'
动态条件构建的安全做法是怎样的？	使用clauses列表收集条件，args列表收集值，最后用join连接
update/delete操作中如何使用安全参数？	同样支持where和whereArgs参数，用法与query()一致
为什么参数化查询能防止SQL注入？	数据库引擎将查询结构与数据分离处理，自动转义特殊字符