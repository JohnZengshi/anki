Flutter应用重启时状态丢失的可能原因是什么？	Android/iOS平台应用生命周期导致的（需查看特定平台恢复指南）。
状态管理的核心挑战是什么？	在屏幕/组件间共享应用状态。
为什么需要状态管理？	处理跨组件/跨屏幕的状态共享需求。
状态管理涉及哪些关键问题？	状态存储位置、更新机制、同步策略等。
Flutter状态管理的目标？	实现高效的状态共享和同步。
为什么移动应用状态会丢失？	平台生命周期管理导致应用重启。
状态恢复的关键是什么？	实现状态持久化存储。
跨屏幕状态共享的典型场景？	用户登录状态、应用主题设置等。
状态管理的基本单位？	组件（Widget）级别的状态维护。
状态管理的核心原则？	状态提升（Lifting State Up）。
状态管理为何重要？	影响应用性能和用户体验。
何时需要复杂状态管理？	大型应用或多模块协作场景。