Flutter采用什么编程范式构建UI？	声明式编程（Declarative）。
声明式UI的核心特征是什么？	UI完全反映当前应用状态，状态变化触发UI重建。
与命令式框架（如Android SDK）的主要区别是什么？	Flutter不直接修改组件（如widget.setText），而是通过状态驱动UI重建。
为什么Flutter能频繁重建UI？	框架性能足够高效，支持每帧重建（即使每秒60次）。
状态变化时如何处理UI？	丢弃旧UI控件，用新状态重建新UI。
声明式编程的优势是什么？	任何UI状态只有唯一代码描述路径，简化维护。
为什么声明式编程初学可能反直觉？	不同于传统直接操作UI的命令式模式。
Flutter中如何改变界面文字显示？	更新状态并让框架重建包含新文字的UI。
重建UI是否会造成性能问题？	不会，Flutter优化了重建过程，速度极快。
文档提到哪些传统命令式框架？	Android SDK和iOS UIKit。
声明式编程的关键思维转变是什么？	从"如何修改UI"变为"描述UI在不同状态下的外观"。
Flutter是否支持传统UI修改方式？	否，完全采用声明式重建机制。
声明式编程如何简化开发？	无需考虑UI变化路径，只需描述最终状态。
为什么只需描述UI在给定状态下的外观？	框架自动处理状态到UI的转换。
触发UI重绘的条件是什么？	应用状态发生改变。
何时会发生UI完全重建？	状态每次变化时（即使变化很小）。